# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the linter:
  rules:
    # Code Style
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_null_aware_operators: true
    avoid_print: true

    # Performance
    avoid_function_literals_in_foreach_calls: true
    avoid_unnecessary_containers: true
    prefer_collection_literals: true

    # Best Practices
    always_declare_return_types: true
    always_require_non_null_named_parameters: true
    # always_specify_types: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_empty_else: true
    avoid_init_to_null: true
    avoid_returning_null: true
    avoid_returning_this: true
    avoid_types_as_parameter_names: true
    # avoid_types_on_closure_parameters: true
    avoid_unused_constructor_parameters: true
    camel_case_types: true
    empty_catches: false
    prefer_adjacent_string_concatenation: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true

    # Documentation
    # public_member_api_docs: true

    # Error Handling
    avoid_catching_errors: true
    avoid_redundant_argument_values: true
    avoid_renaming_method_parameters: true
    avoid_shadowing_type_parameters: true
    avoid_type_to_string: true

    # Testing
    avoid_annotating_with_dynamic: true
    # avoid_dynamic_calls: true

    # Flutter Specific
    prefer_generic_function_type_aliases: true
    prefer_const_constructors_in_immutables: true
    prefer_expression_function_bodies: true

    # Disabled Rules
    # These rules are disabled based on project needs
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
